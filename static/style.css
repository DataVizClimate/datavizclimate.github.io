

* {
    box-sizing: border-box;
  }

  body {
    font-family: sans-serif;
    font-size: 11px;
    background-color: #ffffff;
    margin: 0px;
    overflow: hidden;
  }

p {
  font-size: 17px;
}

h1 {
  font-size: 40px;
}

h2 {
  font-size: 30px;
}

h3 {
  font-size: 20px;
}


.center {
  position: absolute;
  left: 50%;
  top: 50%;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
}

.panel-container {
  position: absolute;
  width: 100%;
  height: 100%;
  place-items:  center; 
  min-height: 100vh;
  background: transparent;
  display: grid;
    
}

.info-panel-container {
  opacity: 0%;
  pointer-events: none;
  transition: opacity 1s;
}

.opening-panel {
  height: 100%;
  width: 100%;
  position: fixed;
  /*transform: translateY(10%);*/
  /*z-index: 10;*/
  text-align: center;
  color: white;
  transition: all 0.5s;
}

/*.opening-panel h1{
  color: white;
}

.opening-panel p{
  color: white;
}*/


.panel {
  background-color: transparent;
  transform-style: preserve-3d;
  position: absolute;
  /* background: white; */
  /*aspect-ratio: 16 / 9;*/
  height: 100%;
  width: 100%;
  /*box-shadow: 0px 30px 40px -25px rgba(0, 0, 0, 1);*/
  /*transform: scale(0.5);*/
  /*transition: all 0.1s;*/
  color: white;
  text-shadow: #000000 1px 0 10px;
}


.shadow {
  position: absolute;
  background: transparent;
  width: 100%;
  height: 100%;
  box-shadow: 0px 30px 40px -25px rgba(0, 0, 0, 1);
  transform: translateY(100%);
}

.canvas {
  position: absolute;
  width: 100%;
  height: 100%;
}

.reflection
{
    -webkit-transform: scaleY(-1) translateY(-100%);
    -moz-transform: scaleY(-1) translateY(-100%);
    -o-transform: scaleY(-1) translateY(-100%);
    -ms-transform: scaleY(-1) translateY(-100%);
    transform: scaleY(-1) translateY(-100%);
}

.slider {
  width: 100%;
}

.text-container {
  background-color: white;
  color: black;
  text-shadow: #000000FF 0px 0 0px;
  border-radius: 10px;
  padding: 25px;
  margin: 50px;
}

.text-container p {
  margin: 0px;
}

.text-container h2 {
  margin-top: 0px;
  margin-bottom: 20px;
}

.vertical-slider {
  background: aqua;
  height: 100px;
  width: 25px;
  border-radius: 7px;
  overflow: hidden;
}

.vertical-bar {
  background: black;
  /* height: 100px; */
  width: 25px;
  bottom: 0px;
  transition: all 0.1s;
}

/* Range Slider */
/* https://codepen.io/vsync/pen/mdEJMLv */
/* https://stackoverflow.com/questions/26612700/ticks-for-type-range-html-input */

.range {
  width: 100%;

  --ticksThickness: 2px;
  --ticksHeight: 30%;
  --ticksColor: silver;
  
  display: inline-block;
  background: silver;
  background: linear-gradient(to right, var(--ticksColor) var(--ticksThickness), transparent 1px) repeat-x;
  background-size: calc(100%/((var(--max) - var(--min)) / var(--step)) - .1%) var(--ticksHeight);
  background-position: 0 bottom;
  position: relative;
}


/* min / max labels at the edges */
.range::before, .range::after {
  font: 12px monospace;
  content: counter(x);
  position: absolute;
  bottom: -2ch;
}

.range::before {
  counter-reset: x var(--min);
  transform: translateX(-50%);
}

.range::after {
  counter-reset: x var(--max);
  right: 0;
  transform: translateX(50%);
}